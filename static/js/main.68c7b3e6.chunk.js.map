{"version":3,"sources":["Components/Section.jsx","Components/FeedbackOptions.jsx","Components/Statistics.jsx","Components/Notification.jsx","App.js","index.js"],"names":["Section","title","children","className","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","onClick","Statistics","good","bad","neutral","total","positivePercentage","Notification","message","App","state","props","initialGood","initialNeutral","initialBad","handleFeedback","e","setState","prevState","value","target","countTotalFeedback","args","reduce","a","b","countPositiveFeedbackPercentage","Math","round","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAAe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAU,WAAnB,UACE,oBAAIA,UAAU,kBAAd,SAAiCF,IAChCC,KCJQ,SAASE,EAAT,GAGX,IAFFC,EAEC,EAFDA,QACAC,EACC,EADDA,gBAEA,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLC,KAAMF,EACNL,UAAU,mBACVQ,QAASL,EAJX,SAMGE,SCbI,SAASI,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,IACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qCACE,oBAAId,UAAU,mBAAd,wBACA,qBAAIA,UAAU,kBAAd,UACE,qBAAIA,UAAU,kBAAd,mBAAuCU,KACvC,qBAAIV,UAAU,kBAAd,sBACYY,KAEZ,qBAAIZ,UAAU,kBAAd,kBAAsCW,KACtC,qBAAIX,UAAU,kBAAd,oBAAwCa,KACxC,qBAAIb,UAAU,kBAAd,gCACsBc,EADtB,aCjBO,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,UCQPC,E,4MASJC,MAAQ,CACNR,KAAM,EAAKS,MAAMC,YACjBR,QAAS,EAAKO,MAAME,eACpBV,IAAK,EAAKQ,MAAMG,Y,EAGlBC,eAAiB,SAAAC,GACf,EAAKC,UAAS,SAAAC,GACZ,IAAMC,EAAQH,EAAEI,OAAOrB,KACvB,OAAO,eACJoB,EAAQD,EAAUC,GAAS,O,EAKlCE,mBAAqB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBACnBA,EAAKC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,M,EAE5BC,gCAAkC,SAACxB,EAAMG,GAAP,OACtB,IAAVA,EAAcsB,KAAKC,MAAO1B,EAAOG,EAAS,KAAO,G,4CAEnD,WACE,MAA+BwB,KAAKnB,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,QACbC,EAAQwB,KAAKR,mBACjBnB,EACAC,EACAC,GAGIE,EACJuB,KAAKH,gCAAgCxB,EAAMG,GAE7C,OACE,eAAChB,EAAD,CAASC,MAAM,wBAAf,UACE,cAACG,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBkC,KAAKd,iBAGvBV,EAAQ,EACP,cAACJ,EAAD,CACEC,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAOA,EACPC,mBAAoBA,IAGtB,cAACC,EAAD,CAAcC,QAAQ,6B,GAzDdsB,aAAZrB,EACGsB,aAAe,CACpBnB,YAAa,EACbC,eAAgB,EAChBC,WAAY,GA4DDL,QCpEfuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.68c7b3e6.chunk.js","sourcesContent":["export default function Section({ title, children }) {\r\n  return (\r\n    <section className=\"feedback\">\r\n      <h2 className=\"feedback__title\">{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n","export default function FeedbackOptions({\r\n  options,\r\n  onLeaveFeedback,\r\n}) {\r\n  return (\r\n    <>\r\n      {options.map(option => (\r\n        <button\r\n          type=\"button\"\r\n          name={option}\r\n          className=\"feedback__button\"\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","export default function Statistics({\r\n  good,\r\n  bad,\r\n  neutral,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <>\r\n      <h2 className=\"statistic__title\">Statistics</h2>\r\n      <ul className=\"statistic__item\">\r\n        <li className=\"statistic__item\">Good: {good}</li>\r\n        <li className=\"statistic__item\">\r\n          Neutral: {neutral}\r\n        </li>\r\n        <li className=\"statistic__item\">Bad: {bad}</li>\r\n        <li className=\"statistic__item\">Total: {total}</li>\r\n        <li className=\"statistic__item\">\r\n          Positive feedback: {positivePercentage}%\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","export default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n","import { Component } from 'react';\nimport PropTypes from 'prop-type';\nimport Section from 'Components/Section';\nimport FeedbackOptions from 'Components/FeedbackOptions';\nimport Statistics from 'Components/Statistics';\nimport Notification from 'Components/Notification';\n\nimport './App.css';\n\nclass App extends Component {\n  static defaultProps = {\n    initialGood: 0,\n    initialNeutral: 0,\n    initialBad: 0,\n  };\n\n  static propTypes = {};\n\n  state = {\n    good: this.props.initialGood,\n    neutral: this.props.initialNeutral,\n    bad: this.props.initialBad,\n  };\n\n  handleFeedback = e => {\n    this.setState(prevState => {\n      const value = e.target.name;\n      return {\n        [value]: prevState[value] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = (...args) =>\n    args.reduce((a, b) => a + b);\n\n  countPositiveFeedbackPercentage = (good, total) =>\n    total !== 0 ? Math.round((good / total) * 100) : 0;\n\n  render() {\n    const { good, bad, neutral } = this.state;\n    const total = this.countTotalFeedback(\n      good,\n      bad,\n      neutral,\n    );\n\n    const positivePercentage =\n      this.countPositiveFeedbackPercentage(good, total);\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={this.handleFeedback}\n        />\n\n        {total > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}